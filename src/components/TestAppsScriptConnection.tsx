
import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { useToast } from "@/hooks/use-toast";
import { googleSheetsService } from "@/services/googleSheetsService";

const TestAppsScriptConnection = () => {
  const [testing, setTesting] = useState(false);
  const [result, setResult] = useState<string>("");
  const { toast } = useToast();

  // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
  const envWebAppUrl = import.meta.env.VITE_GOOGLE_APPS_SCRIPT_URL;
  const envSheetsId = import.meta.env.VITE_GOOGLE_SHEETS_ID;
  const envApiKey = import.meta.env.VITE_GOOGLE_SHEETS_API_KEY;

  // Fallback –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ googleSheetsService
  const fallbackWebAppUrl = 'https://script.google.com/macros/s/AKfycbycArxbd3ZUd-bWzuoTFeGe1CIt339FB1G1NJ2x-0_6lVXdOksA5R8soYZ-WIMvQKUH/exec';
  const fallbackSheetsId = '1fh4-V4n0ho-RF06xcxl0JYxK5xQf8WOMSYy-tF6vRkU';
  const fallbackApiKey = 'AIzaSyD1-O9ID7-2EFVum1ITNRyrhJYtvlY5wKg';

  // –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
  const webAppUrl = envWebAppUrl || fallbackWebAppUrl;
  const sheetsId = envSheetsId || fallbackSheetsId;
  const apiKey = envApiKey || fallbackApiKey;

  const testConnection = async () => {
    setTesting(true);
    setResult("");
    
    console.log('=== DEBUGGING ENV VARS ===');
    console.log('ENV VITE_GOOGLE_APPS_SCRIPT_URL:', envWebAppUrl || 'NOT SET');
    console.log('ENV VITE_GOOGLE_SHEETS_ID:', envSheetsId || 'NOT SET');
    console.log('ENV VITE_GOOGLE_SHEETS_API_KEY:', envApiKey ? `${envApiKey.substring(0, 10)}...` : 'NOT SET');
    console.log('Using webAppUrl:', webAppUrl);
    console.log('Using sheetsId:', sheetsId ? `${sheetsId.substring(0, 10)}...` : 'NOT SET');
    console.log('Using apiKey:', apiKey ? `${apiKey.substring(0, 10)}...` : 'NOT SET');

    try {
      console.log('Testing Apps Script URL:', webAppUrl);
      
      const response = await fetch(webAppUrl, {
        method: 'GET',
        headers: {
          'Accept': 'application/json',
        }
      });
      
      console.log('Response status:', response.status);
      console.log('Response ok:', response.ok);
      
      if (response.ok) {
        const data = await response.json();
        setResult(`‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ! Status: ${response.status}\n–û—Ç–≤–µ—Ç: ${JSON.stringify(data, null, 2)}`);
        toast({
          title: "–£—Å–ø–µ—à–Ω–æ!",
          description: "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Apps Script —Ä–∞–±–æ—Ç–∞–µ—Ç"
        });
      } else {
        const errorText = await response.text();
        setResult(`‚ùå HTTP –æ—à–∏–±–∫–∞: ${response.status} - ${response.statusText}\n${errorText}`);
      }
      
    } catch (error) {
      console.error('Connection test error:', error);
      const errorMessage = `‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`;
      setResult(errorMessage);
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Google Apps Script",
        variant: "destructive"
      });
    }
    
    setTesting(false);
  };

  const testRegistration = async () => {
    setTesting(true);
    setResult("–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é...");
    
    try {
      const testData = {
        telegramId: 'test_' + Date.now(),
        firstName: '–¢–µ—Å—Ç',
        lastName: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
        phone: '+1234567890',
        email: 'test@example.com',
        username: 'testuser',
        inviterCode: 'PARTNER123456'
      };
      
      const result = await googleSheetsService.registerPartner(testData);
      
      if (result.success) {
        setResult(`‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –ü—Ä–æ–º–æ–∫–æ–¥: ${result.promoCode}`);
        toast({
          title: "–£—Å–ø–µ—à–Ω–æ!",
          description: `–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç! –ü—Ä–æ–º–æ–∫–æ–¥: ${result.promoCode}`
        });
      } else {
        setResult(`‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${result.error}`);
        toast({
          title: "–û—à–∏–±–∫–∞",
          description: result.error || "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏",
          variant: "destructive"
        });
      }
      
    } catch (error) {
      console.error('Registration test error:', error);
      const errorMessage = `‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`;
      setResult(errorMessage);
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏",
        variant: "destructive"
      });
    }
    
    setTesting(false);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-4">
      <div className="max-w-2xl mx-auto pt-20">
        <Card>
          <CardHeader className="text-center">
            <CardTitle className="text-2xl font-bold text-gray-800">
              –¢–µ—Å—Ç Google Apps Script
            </CardTitle>
            <CardDescription>
              –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
            </CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            {/* –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è */}
            <div className="bg-gray-50 border border-gray-200 p-4 rounded-lg">
              <h3 className="font-semibold text-gray-800 mb-2">–°—Ç–∞—Ç—É—Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:</h3>
              <div className="text-sm space-y-1">
                <div className={envWebAppUrl ? 'text-green-700' : 'text-orange-600'}>
                  <strong>VITE_GOOGLE_APPS_SCRIPT_URL:</strong> 
                  {envWebAppUrl ? ' ‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏–∑ ENV' : ' ‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è fallback'}
                </div>
                <div className={envSheetsId ? 'text-green-700' : 'text-orange-600'}>
                  <strong>VITE_GOOGLE_SHEETS_ID:</strong> 
                  {envSheetsId ? ' ‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏–∑ ENV' : ' ‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è fallback'}
                </div>
                <div className={envApiKey ? 'text-green-700' : 'text-orange-600'}>
                  <strong>VITE_GOOGLE_SHEETS_API_KEY:</strong> 
                  {envApiKey ? ' ‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏–∑ ENV' : ' ‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è fallback'}
                </div>
              </div>
            </div>

            {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è */}
            <div className="bg-blue-50 border border-blue-200 p-4 rounded-lg">
              <h3 className="font-semibold text-blue-800 mb-2">–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è:</h3>
              <div className="text-sm text-blue-700 space-y-1 font-mono">
                <p><strong>Apps Script URL:</strong> {webAppUrl}</p>
                <p><strong>Sheets ID:</strong> {sheetsId}</p>
                <p><strong>API Key:</strong> {apiKey ? `${apiKey.substring(0, 15)}...` : 'NOT SET'}</p>
              </div>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <Button 
                onClick={testConnection}
                disabled={testing}
                className="w-full bg-green-600 hover:bg-green-700"
              >
                {testing ? "–¢–µ—Å—Ç–∏—Ä—É–µ–º..." : "–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"}
              </Button>
              
              <Button 
                onClick={testRegistration}
                disabled={testing}
                className="w-full bg-blue-600 hover:bg-blue-700"
              >
                {testing ? "–¢–µ—Å—Ç–∏—Ä—É–µ–º..." : "–¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"}
              </Button>
            </div>
            
            {result && (
              <div className={`p-4 rounded-lg ${
                result.includes('‚úÖ') 
                  ? 'bg-green-50 border border-green-200 text-green-800'
                  : 'bg-red-50 border border-red-200 text-red-800'
              }`}>
                <pre className="whitespace-pre-wrap text-sm font-mono">{result}</pre>
              </div>
            )}

            <div className="bg-yellow-50 border border-yellow-200 p-4 rounded-lg">
              <h3 className="font-semibold text-yellow-800 mb-2">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</h3>
              <div className="text-sm text-yellow-700 space-y-2">
                <p>üî∏ <strong>–î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞:</strong> –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ ENV –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Lovable</p>
                <p>üî∏ <strong>–î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:</strong> Fallback –∑–Ω–∞—á–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç, –Ω–æ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ENV</p>
                <p>üî∏ <strong>Settings ‚Üí Environment Variables ‚Üí –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ</strong></p>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

export default TestAppsScriptConnection;
